{
    "sourceFile": "src/app/apts.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1651406753605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1651406815599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,11 +23,9 @@\n  * @returns {Array} - an array of BookWithReviews objects\r\n  */\r\n function parseBooksData(books, reviews) {\r\n   // TODO: Implement\r\n-  books = require(\"./dataset/books.json\");\r\n \r\n-  reviews = require(\"./dataset/reviews.json\");\r\n   return books\r\n     .map((book) => {\r\n       return new BookWithReviews(book.id, book.title);\r\n     })\r\n@@ -44,10 +42,12 @@\n       return bookWithReviews;\r\n     });\r\n   // console.log(books)\r\n }\r\n+const books = require(\"./dataset/books.json\");\r\n \r\n-parseBooksData();\r\n+const reviews = require(\"./dataset/reviews.json\");\r\n+parseBooksData(books, reviews);\r\n /**\r\n  * Displays data from passed `books` array. For example, if books argument would have following value:\r\n  *    books = [ { id: 101, title: \"Some book title\", reviews : [ { author: \"John\", content: \"Great book!\" }] } ];\r\n  * then, following structure should be created under the parentNode:\r\n"
                }
            ],
            "date": 1651406753605,
            "name": "Commit-0",
            "content": "// class BookWithReviews {\r\n//   constructor(id, title) {\r\n//     this.id = id;\r\n//     this.title = title;\r\n//     this.reviews = [];\r\n//   }\r\n\r\n//   addReview(author, content) {\r\n//     this.reviews.push({ author, content });\r\n//   }\r\n// }\r\nimport { BookWithReviews } from \"./model\";\r\n/**\r\n * Parses passed books and reviews arrays to create an array of BookWithReviews object. Each row from books input array\r\n * should have a corresponding row in resulting array. For example, for following input data:\r\n *    books = [ { \"id\" : 101, \"title\" : \"Some book title\" } ]\r\n *    reviews = [ { \"bookId\" : 101, \"author\" : \"John\", \"content\" : \"Great book!\" } ];\r\n * It should return following result:\r\n *    result = [ { id: 101, title: \"Some book title\", reviews : [ { author: \"John\", content: \"Great book!\" }] } ];\r\n *\r\n * @param books - an array of input books, see 'src/app/dataset/books.json' for sample data.\r\n * @param reviews - an array of input reviews, see 'src/app/dataset/reviews.json' for sample data.\r\n * @returns {Array} - an array of BookWithReviews objects\r\n */\r\nfunction parseBooksData(books, reviews) {\r\n  // TODO: Implement\r\n  books = require(\"./dataset/books.json\");\r\n\r\n  reviews = require(\"./dataset/reviews.json\");\r\n  return books\r\n    .map((book) => {\r\n      return new BookWithReviews(book.id, book.title);\r\n    })\r\n    .map((bookWithReviews) => {\r\n      reviews\r\n        .filter((review) => bookWithReviews.id === review.bookId)\r\n        .forEach((filteredBooks) => {\r\n          bookWithReviews.addReview(\r\n            filteredBooks.author,\r\n            filteredBooks.content\r\n          );\r\n        });\r\n      // console.log(bookWithReviews);\r\n      return bookWithReviews;\r\n    });\r\n  // console.log(books)\r\n}\r\n\r\nparseBooksData();\r\n/**\r\n * Displays data from passed `books` array. For example, if books argument would have following value:\r\n *    books = [ { id: 101, title: \"Some book title\", reviews : [ { author: \"John\", content: \"Great book!\" }] } ];\r\n * then, following structure should be created under the parentNode:\r\n * <ol>\r\n *    <li>\r\n *      <span>Some book title</span>\r\n *      <ul>\r\n *        <li>Great book! by John</li>\r\n *      </ul>\r\n *    </li>\r\n * </ol>\r\n * @param parentNode - parent node for all books\r\n * @param books - an array of BookWithReviews objects.\r\n */\r\n// export function displayBooks(parentNode, books) {\r\n//   // TODO: Implement\r\n// }\r\n"
        }
    ]
}